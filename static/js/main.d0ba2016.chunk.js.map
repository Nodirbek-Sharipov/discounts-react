{"version":3,"sources":["contexts/LanguageContext.tsx","consts/Languages.js","components/fragments/LangSelect.tsx","components/fragments/Logo.tsx","theme/appTheme.js","utils/themeChanger.js","contexts/ThemeContext.tsx","components/fragments/ThemeToggle.tsx","consts/Translations.js","components/views/NavBar.tsx","components/fragments/LocationSelect.tsx","components/views/SearchBar.tsx","components/views/TopBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","language","localStorage","getItem","setLanguage","lang","LanguageContext","createContext","LanguageContextProvider","state","Provider","value","this","setItem","setState","props","children","Component","AllLanguages","key","flag","LangSelect","useContext","useState","menuOpen","setMenuOpen","animation","setAnimation","hovering","setHovering","togglePopup","animationName","display","mouseEnterListener","mouseLeaveListener","documentClickListener","useEffect","document","querySelector","addEventListener","removeEventListener","currentLanguage","filter","x","className","onClick","role","aria-label","style","map","SetLang","Logo","href","appTheme","light","color_dark","color_light","color_primary","color_light_gray_text","color_gray_text","color_primary_text","color_bg_09","color_divider","dark","darken","Object","keys","color","cssify","replace","documentElement","setProperty","lighten","themeMode","setThemeMode","theme","ThemeContext","ThemeContextProvider","ThemeToggle","en","sign_in","add_business","cities","search_discounts","filters","search","uz","ru","Translations","NavBar","title","LocationSelect","SearchBar","type","placeholder","spellCheck","name","autoComplete","autoCorrect","TopBar","App","Boolean","window","location","hostname","match","AppWrap","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0ba2016.chunk.js","sourcesContent":["import React, {\n\tcreateContext,\n\tComponent,\n} from 'react'\n\nconst DEFAULT_LANG = 'en'\n\nconst initialState = {\n\tlanguage: localStorage.getItem('language') || DEFAULT_LANG,\n\tsetLanguage: (lang:string):void=> {},\n}\n\nexport const LanguageContext = createContext({...initialState})\n\n\nclass LanguageContextProvider extends Component {\n\n\tstate = {...initialState}\n\n\trender() {\n\t\treturn (\n\t\t\t<LanguageContext.Provider value={{\n\t\t\t\t...this.state,\n\t\t\t\tsetLanguage: (lang:string)=> {\n\t\t\t\t\tlocalStorage.setItem('language', lang)\n\t\t\t\t\tthis.setState({...this.state, language: lang})\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t\t{this.props.children}\n\t\t\t</LanguageContext.Provider>\n\t\t);\n\t}\n}\n\nexport default LanguageContextProvider;","export const en = {\n\tkey: 'en',\n\tflag: '🇬🇧',\n\tvalue: 'En',\n}\n\nexport const uz = {\n\tkey: 'uz',\n\tflag: '🇺🇿',\n\tvalue: 'Uz',\n}\n\nexport const ru = {\n\tkey: 'ru',\n\tflag: '🇷🇺',\n\tvalue: 'Ru',\n}\n\nexport const AllLanguages = [en, uz, ru]","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect,\n} from 'react'\nimport { LanguageContext } from '../../contexts/LanguageContext'\nimport { FiChevronDown } from \"react-icons/fi\"\nimport { AllLanguages } from \"../../consts/Languages\"\n\nexport default function LangSelect() {\n\n\tconst { language, setLanguage } = useContext(LanguageContext)\n\n\tconst [menuOpen, setMenuOpen] = useState(false)\n\n\tconst [animation, setAnimation] = useState({})\n\n\tconst [hovering, setHovering] = useState(false)\n\n\tconst togglePopup = ():void => {\n\t\tsetMenuOpen(!menuOpen)\n\t\tsetAnimation({\n\t\t\tanimationName: menuOpen ? 'FadeOut' : 'FadeIn',\n\t\t\tdisplay: menuOpen ? 'none' : 'flex',\n\t\t})\n\t}\n\n\tconst SetLang = (lang:string):void=>{\n\t\tsetLanguage(lang)\n\t\ttogglePopup()\n\t}\n\n\tconst mouseEnterListener = ()=> setHovering(true)\n\n\tconst mouseLeaveListener = ()=> setHovering(true)\n\n\tconst documentClickListener = ()=> (menuOpen && hovering) && togglePopup()\n\n\n\tuseEffect(() => {\n\t\t// effect\n\t\tdocument.querySelector('.lang-select-wrap')?.addEventListener('mouseenter', mouseEnterListener)\n\t\tdocument.querySelector('.lang-select-wrap')?.addEventListener('mouseleave', mouseLeaveListener)\n\t\tdocument.querySelector('.lang-popup-wrap')?.addEventListener('mouseenter', mouseEnterListener)\n\t\tdocument.querySelector('.lang-popup-wrap')?.addEventListener('mouseleave', mouseLeaveListener)\n\t\tdocument.addEventListener('click', documentClickListener)\n\n\t\treturn () => {\n\t\t\t// cleanup\n\t\t\tdocument.querySelector('.lang-select-wrap')?.removeEventListener('mouseenter', mouseEnterListener)\n\t\t\tdocument.querySelector('.lang-select-wrap')?.removeEventListener('mouseleave', mouseLeaveListener)\n\t\t\tdocument.querySelector('.lang-popup-wrap')?.removeEventListener('mouseenter', mouseEnterListener)\n\t\t\tdocument.querySelector('.lang-popup-wrap')?.removeEventListener('mouseleave', mouseLeaveListener)\n\t\t\tdocument.removeEventListener('click', documentClickListener)\n\t\t}\n\t})\n\n\tconst currentLanguage = AllLanguages.filter(x=>x.key === language)[0]\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"lang-select-wrap\" onClick={togglePopup}>\n\t\t\t\t<div><span role='img' aria-label={currentLanguage.key}>{currentLanguage.flag}</span> {currentLanguage.value}</div>\n\t\t\t\t<FiChevronDown className=\"icon-chevron-down\" />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={animation}\n\t\t\t\tclassName=\"lang-popup-wrap\"\n\t\t\t>\n\t\t\t\t<div className=\"arrow-up\"></div>\n\t\t\t\t{\n\t\t\t\t\tAllLanguages.map(lang=>{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={()=> SetLang(lang.key)}\n\t\t\t\t\t\t\t\tkey={lang.key} >\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\trole='img'\n\t\t\t\t\t\t\t\t\taria-label={lang.key} >\n\t\t\t\t\t\t\t\t\t{lang.flag}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{lang.value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\n\nexport default function Logo() {\n\treturn (\n\t\t<div className=\"logo-wrap\">\n\t\t\t<a href='#!'><span className=\"logo-capital\">A</span>rbazarr</a>\n\t\t</div>\n\t)\n}\n","const appTheme = {\n\tlight : {\n\t\tcolor_dark: \"#FAFBFC\",\n\t\tcolor_light: \"#FFFFFF\",\n\t\tcolor_primary: \"#DF5339\",\n\n\t\tcolor_light_gray_text: \"#B3BBC6\",\n\t\tcolor_gray_text: \"#979797\",\n\t\tcolor_primary_text: \"#000000\",\n\t\tcolor_bg_09: \"rgba(255,255,255,0.9)\",\n\t\tcolor_divider: \"rgba(0,0,0,0.25)\",\n\t},\n\n\tdark : {\n\t\tcolor_dark: \"#1F1F1F\",\n\t\tcolor_light: \"#121212\",\n\t\tcolor_primary: \"#d35b44\",\n\n\t\tcolor_light_gray_text: \"#474a4d\",\n\t\tcolor_gray_text: \"#B3BBC6\",\n\t\tcolor_primary_text: \"#ffffff\",\n\t\tcolor_bg_09: \"rgba(0,0,0,0.9)\",\n\t\tcolor_divider: \"rgba(255,255,255,0.25)\",\n\t}\n};\n\n\nexport default appTheme;\n\n\n","import appTheme from '../theme/appTheme';\n\nexport const darken = ()=>{\n\tfor(let color of Object.keys(appTheme.dark)){\n\t\tlet cssify = '--'+color.replace(/_/g, '-')\n\t\tdocument.documentElement.style.setProperty(cssify, appTheme.dark[color]);\n\t}\n}\n\nexport const lighten = ()=>{\n\tfor(let color of Object.keys(appTheme.light)){\n\t\tlet cssify = '--'+color.replace(/_/g, '-')\n\t\tdocument.documentElement.style.setProperty(cssify, appTheme.light[color]);\n\t}\n}\n","import React, {\n\tcreateContext,\n\tComponent,\n} from 'react'\n\nimport {\n\tdarken,\n\tlighten,\n} from '../utils/themeChanger'\n\nconst DEFAULT_THEME_MODE = 'light'\n\nconst initialState = {\n\tthemeMode: localStorage.getItem('themeMode') || DEFAULT_THEME_MODE,\n\tsetThemeMode: (theme:string):void=> {},\n}\n\nexport const ThemeContext = createContext({...initialState})\n\n\nclass ThemeContextProvider extends Component {\n\n\tstate = {...initialState}\n\n\tcomponentDidMount(){\n\n\t\tif(this.state.themeMode === 'light'){\n\t\t\tlighten()\n\t\t}\n\n\t\tif(this.state.themeMode === 'dark'){\n\t\t\tdarken()\n\t\t}\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ThemeContext.Provider value={{\n\t\t\t\t...this.state,\n\t\t\t\tsetThemeMode: (theme:string)=> {\n\t\t\t\t\tlocalStorage.setItem('themeMode', theme)\n\t\t\t\t\tthis.setState({...this.state, themeMode: theme})\n\n\t\t\t\t\tif(theme === 'light'){\n\t\t\t\t\t\tlighten()\n\t\t\t\t\t}\n\n\t\t\t\t\tif(theme === 'dark'){\n\t\t\t\t\t\tdarken()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t\t{this.props.children}\n\t\t\t</ThemeContext.Provider>\n\t\t);\n\t}\n}\n\nexport default ThemeContextProvider;","import React, { useContext } from 'react'\nimport { ThemeContext } from '../../contexts/ThemeContext'\nimport { FiSun, FiMoon } from \"react-icons/fi\";\n\nexport default function ThemeToggle() {\n\n\tconst {themeMode, setThemeMode} = useContext(ThemeContext)\n\n\treturn (\n\t\t<div className=\"theme-toggle-container\" onClick={()=>{ setThemeMode(themeMode === 'light' ? 'dark' : 'light') }}>\n\t\t\t<FiSun className=\"icon-primary-color\"/>\n\n\t\t\t<div className=\"theme-toggle-wrap\">\n\t\t\t\t<div className={themeMode === \"light\" ? `theme-toggle-thumb toggle-go-light` : `theme-toggle-thumb toggle-go-dark`}></div>\n\t\t\t</div>\n\n\t\t\t<FiMoon className=\"icon-primary-color\"/>\n\t\t</div>\n\t)\n}","export const en = {\n\tsign_in: \"Sign in\",\n\tadd_business: \"Add business\",\n\tcities: \"Cities\",\n\tsearch_discounts: \"Search discounts...\",\n\tfilters: \"Filters\",\n\tsearch: \"Search\",\n}\n\nexport const uz = {\n\tsign_in: \"Kirish\",\n\tadd_business: \"Kompaniya qo'shish\",\n\tcities: \"Shaharlar\",\n\tsearch_discounts: \"Chegirma izlash...\",\n\tfilters: \"Filterlar\",\n\tsearch: \"Izlash\",\n}\n\nexport const ru = {\n\tsign_in: \"Войти\",\n\tadd_business: \"Добавить компанию\",\n\tcities: \"Города\",\n\tsearch_discounts: \"Искать скидки...\",\n\tfilters: \"Фильтры\",\n\tsearch: \"Поиск\",\n}\n\nconst Translations = (lang)=>{\n\treturn lang==='ru' ? ru : lang==='uz' ? uz : en\n}\n\nexport default Translations","import React, { useContext } from 'react'\nimport { FiPlusCircle, FiUser } from 'react-icons/fi'\nimport LangSelect from '../fragments/LangSelect'\nimport Logo from '../fragments/Logo'\nimport ThemeToggle from '../fragments/ThemeToggle'\nimport Translations from '../../consts/Translations'\nimport { LanguageContext } from '../../contexts/LanguageContext'\n\nexport default function NavBar() {\n\n\tconst { language } = useContext(LanguageContext)\n\n\treturn (\n\t\t<div className=\"nav-row\">\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<div className=\"nav-left\">\n\t\t\t\t\t<Logo />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"nav-right\">\n\n\t\t\t\t\t<div className=\"toolbox\">\n\t\t\t\t\t\t<LangSelect />\n\t\t\t\t\t\t<ThemeToggle/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ul className=\"nav-ul\">\n\t\t\t\t\t\t<li><a href=\"#!\"><FiUser className=\"link-icon\" title={Translations(language).sign_in}/> <span className=\"link-label\">{Translations(language).sign_in}</span></a></li>\n\t\t\t\t\t\t<li><a href=\"#!\"><FiPlusCircle className=\"link-icon\"  title={Translations(language).add_business}/> <span className=\"link-label\">{Translations(language).add_business}</span></a></li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t</div>\n\n\n\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, { useContext } from 'react'\nimport { FiMapPin, FiChevronDown } from \"react-icons/fi\";\nimport { LanguageContext } from '../../contexts/LanguageContext';\nimport Translations from '../../consts/Translations'\n\nexport default function LocationSelect() {\n\n\tconst { language } = useContext(LanguageContext)\n\n\treturn (\n\t\t<div className=\"location-select\">\n\t\t\t<div className=\"location-icon-wrap\">\n\t\t\t\t<FiMapPin className=\"link-icon\"/>\n\t\t\t</div>\n\t\t\t<div className=\"all-cities-title\">\n\t\t\t\t<span>{Translations(language).cities}</span>\n\t\t\t\t<FiChevronDown />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, { useContext } from 'react'\nimport { FiSearch, FiFilter } from 'react-icons/fi'\nimport { LanguageContext } from '../../contexts/LanguageContext'\nimport LocationSelect from '../fragments/LocationSelect'\nimport Translations from '../../consts/Translations'\n\nexport default function SearchBar() {\n\n\tconst { language } = useContext(LanguageContext)\n\n\treturn (\n\t\t<div className=\"nav-row\">\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<div className=\"search-container\">\n\t\t\t\t\t<LocationSelect />\n\t\t\t\t\t<div className=\"search-icon-placeholder-wrap\">\n\t\t\t\t\t\t<FiSearch />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search-box\">\n\t\t\t\t\t\t<input className=\"search-input\" type=\"search\" placeholder={Translations(language).search_discounts} spellCheck=\"false\" name=\"search\" autoComplete=\"off\" autoCorrect=\"off\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"filters-box\">\n\t\t\t\t\t\t<div className=\"filter-icon-wrap\">\n\t\t\t\t\t\t\t<FiFilter className=\"filter-icon\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"filter-text\">\n\t\t\t\t\t\t\t{Translations(language).filters}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search-button\">\n\t\t\t\t\t\t<span className=\"search-text-label\">{Translations(language).search}</span>\n\t\t\t\t\t\t<FiSearch className=\"search-icon-label\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport NavBar from './NavBar'\nimport SearchBar from './SearchBar'\n\nexport default function TopBar() {\n\n\treturn (\n\t\t<div className=\"top-bar\">\n\n\t\t\t<NavBar />\n\n\t\t\t<SearchBar />\n\n\n\t\t</div>\n\t)\n}\n","import React, {} from 'react';\nimport './App.css';\nimport TopBar from './components/views/TopBar';\n\nfunction App() {\n  return (\n\t<div className=\"App\">\n\t\t<TopBar />\n\t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeContextProvider from './contexts/ThemeContext'\nimport LanguageContextProvider from './contexts/LanguageContext'\n\nconst AppWrap = () => (\n\t<LanguageContextProvider>\n\t\t<ThemeContextProvider>\n\t\t\t<App />\n\t\t</ThemeContextProvider>\n\t</LanguageContextProvider>\n)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AppWrap />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}